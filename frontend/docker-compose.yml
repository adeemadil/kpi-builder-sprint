version: '3.8'

services:
  kpi-dashboard:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kpi-dashboard
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      # Database connection (uses existing Supabase PostgreSQL)
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:SAMparker8*@db.lxbqczazcjhnltlzaeyk.supabase.co:5432/postgres}
      # Frontend environment variables
      - VITE_SUPABASE_URL=${VITE_SUPABASE_URL:-https://lxbqczazcjhnltlzaeyk.supabase.co}
      - VITE_SUPABASE_PUBLISHABLE_KEY=${VITE_SUPABASE_PUBLISHABLE_KEY:-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imx4YnFjemF6Y2pobmx0bHphZXlrIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTk3NTkzMzMsImV4cCI6MjA3NTMzNTMzM30.LD5QbwTNtnMwbk8nwWpbNqzEOzA_iMl0UJvXmpoSbSA}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# To load CSV data into the database, run:
# docker-compose exec kpi-dashboard python3 seed_postgres.py

# Quick start:
# 1. Copy .env.example to .env and configure DATABASE_URL
# 2. Run: docker-compose up -d
# 3. Load data: docker-compose exec kpi-dashboard python3 seed_postgres.py
# 4. Access at: http://localhost:3000
